sudo: required
language: node_js
node_js:
  - 8
services:
  - docker
jobs:
  include:
    - stage: test
      env: Type='Lint & Test'
      script:
        - npm run eslint
        - npm run test
    - stage: deploy-npm
      env: Type='npm Deploy'
      before_deploy:
        - npm i --ci
        - npm run postversion
      deploy:
        provider: npm
        skip_cleanup: true
        email: "$NPM_EMAIL"
        api_key: "$NPM_TOKEN"
        on:
          all_branches: true
    - stage: deploy-copr
      env: Type='Copr deploy'
      language: generic
      script:
        - docker run -dit --name copr -v $(pwd):/builddir imlteam/dotnet-docker /usr/sbin/init
        - docker exec -it copr bash -c 'yum install -y rpmdevtools copr-cli'
        - docker exec -it copr bash -c 'cd /builddir && fake run build.fsx --copr-login=$COPR_LOGIN --copr-username=$COPR_USERNAME --copr-token=$COPR_TOKEN --prod'
    - stage: cd
      git:
        depth: 999999
      env: 'Type=Continuous Deployment'
      script:
        - openssl aes-256-cbc -K $encrypted_253525cedcf6_key -iv $encrypted_253525cedcf6_iv -in copr-mfl.enc -out copr-key -d
        - docker run -dit --name copr -v $(pwd):/builddir imlteam/dotnet-docker /usr/sbin/init
        - docker exec -it copr bash -c 'yum install -y rpmdevtools copr-cli git'
        - docker exec -it copr bash -c 'cd /builddir && fake run build.fsx --release=$(git rev-list HEAD | wc -l) --copr-login=$COPR_LOGIN --copr-username=$COPR_USERNAME --copr-token=$COPR_TOKEN'
stages:
  - test
  - name: deploy-npm
    if: branch =~ ^v\d+\.\d+\.\d+-1.*$
  - name: deploy-copr
    if: branch =~ ^v\d+\.\d+\.\d+-.+$
  - name: cd
    if: branch = master AND type = push AND fork = false
